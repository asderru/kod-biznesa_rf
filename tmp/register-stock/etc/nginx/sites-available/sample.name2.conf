server {
    listen 80;
    listen [::]:80;
    server_name www.domain.zone domain.zone;

    return 301 https://domain.zone$request_uri;

    include /etc/nginx/snippets/letsencrypt.conf;
    include /etc/nginx/snippets/bots-block.conf;
}

server {
    listen 443 ssl http2;
    server_name  www.domain.zone;
    return 301 https://domain.zone$request_uri;

    index index.php index.html index.htm sitemap.xml;

    include /etc/nginx/snippets/letsencrypt.conf;
    include /etc/nginx/snippets/ssl.conf;
    include /etc/nginx/snippets/bots-block.conf;
    include /etc/nginx/snippets/babylon-bar.conf;
}

server {
    listen 443 ssl http2;
    server_name domain.zone;

    root /var/www/server_path/domain_zone/frontend/web;
    index index.php index.html index.htm sitemap.xml;

    access_log off;
    error_log   /var/www/server_path/domain_zone/log/nginx-site.log;

    location ~ /\.ht {
        deny all;
       }

    location ~* \.(ico|docx|doc|xls|xlsx|rar|zip|jpg|jpeg|webp|txt|pdf|gif|png|webp|svg|css|js|html|webmanifest|json|eot|otf|ttf|woff2)$ {
        root /var/www/server_path/domain_zone/frontend/web;
        # Используйте try_files для поиска в подпапках
        try_files $uri $uri/ =404;

        expires 31536000s;

        # Добавляем хэш сумму содержимого файла в URL
        set $file_version "";
        if ($request_filename ~* \.(css|js|jpg|jpeg|webp|png|gif|xml)$) {
            set $file_version "-$upstream_http_etag";
        }

        # Директивы, чтобы отключить кэширование для некоторых браузеров
        add_header Cache-Control "public, max-age=2592000";
        add_header ETag $file_version;

        # Добавляем заголовки CORS для разрешения доступа с разных источников
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
    }

    include /etc/nginx/snippets/letsencrypt.conf;
    include /etc/nginx/snippets/location.conf;
    include /etc/nginx/snippets/ssl.conf;
    include /etc/nginx/snippets/bots-block.conf;
    include /etc/nginx/snippets/babylon-bar.conf;
    #include /etc/nginx/snippets/cache/babylon-bar.conf;
}

#########################################################################################

server {
   listen 80;
   listen [::]:80;
   server_name panelID.domain.zone;
   return 301 https://panelID.domain.zone$request_uri;

   include /etc/nginx/snippets/letsencrypt.conf;
   include /etc/nginx/snippets/bots-block.conf;
}

server {
   listen 443 ssl http2;
   listen [::]:443 ssl http2;

   server_name panelID.domain.zone;

   root /var/www/server_path/domain_zone/backend/web;
   index index.php;

   client_max_body_size 60M;

   access_log off;
   error_log   /var/www/server_path/domain_zone/log/nginx-panelID.log;

   location ~ /\.ht {
       deny all;
   }

   location ~* \.(ico|docx|doc|xls|xlsx|rar|zip|jpg|jpeg|webp|txt|xml|pdf|gif|png|webp|css|js|html)$ {
       root   /var/www/server_path/domain_zone/backend/web;
        expires 6M;
        add_header Cache-Control public;
   }

   include /etc/nginx/snippets/letsencrypt.conf;
   include /etc/nginx/snippets/ssl.conf;
   include /etc/nginx/snippets/bots-block.conf;
   include /etc/nginx/snippets/babylon-bar.conf;
}

#########################################################################################

server {
   listen 80;
   listen [::]:80;
   server_name panel.domain.zone;
   return 301 https://panel.domain.zone$request_uri;

   include /etc/nginx/snippets/bots-block.conf;
   include /etc/nginx/snippets/letsencrypt.conf;
}

server {
   listen 443 ssl http2;
   listen [::]:443 ssl http2;

   server_name panel.domain.zone;

   root /var/www/server_path/domain_zone/panel;
   index index.html;

   access_log off;
   error_log   /var/www/server_path/domain_zone/log/nginx-panel.log;

   location ~ /\.ht {
       deny all;
   }

   location ~* \.(html)$ {
       root   /var/www/server_path/domain_zone/panel;
   }

   include /etc/nginx/snippets/letsencrypt.conf;
    include /etc/nginx/snippets/ssl.conf;
    include /etc/nginx/snippets/bots-block.conf;
    include /etc/nginx/snippets/babylon-bar.conf;
}

#####################################################################################

server {
   listen 80;
   listen [::]:80;

   server_name static.domain.zone;
   return 301 https://static.domain.zone$request_uri;

   include /etc/nginx/snippets/letsencrypt.conf;
   include /etc/nginx/snippets/bots-block.conf;
}

server {
   listen 443 ssl http2;
   listen [::]:443 ssl http2;

   server_name static.domain.zone;
   root /var/www/server_path/domain_zone/static;

   access_log off;
   error_log   /var/www/server_path/domain_zone/log/nginx-static.log;

   location ~ /\.ht {
       deny all;
   }

   location ~* \.(ico|docx|doc|xls|xlsx|rar|zip|jpg|jpeg|webp|txt|pdf|gif|png|webp|css|js|html|xml|json|eot|otf|ttf|woff2)$ {
        root   /var/www/server_path/domain_zone/static;
        expires 6M;
        add_header Cache-Control public;
    }

   include /etc/nginx/snippets/letsencrypt.conf;
   include /etc/nginx/snippets/ssl.conf;
   include /etc/nginx/snippets/bots-block.conf;
   include /etc/nginx/snippets/babylon-bar.conf;
}
